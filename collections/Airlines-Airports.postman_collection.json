{
	"info": {
		"_postman_id": "12d6086d-65ef-4027-aed1-ad603e2e4a1e",
		"name": "Airlines-Airports",
		"description": "Buy or rent spacecrafts",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "17993969"
	},
	"item": [
		{
			"name": "Add an airline",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var data = pm.response.json()\r",
							"pm.globals.set(\"airline_id_1\", data.id);\r",
							"\r",
							"pm.test(\"Status code is 201\", function () {\r",
							"    pm.response.to.have.status(201);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Accept",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\": \"Avianca\",\r\n    \"description\": \"Avianca es una empresa de transporte aereo depasajeros y carga ...\",\r\n    \"foundationDate\": \"1987-09-03\",\r\n    \"webPage\": \"https://www.avianca.com/co/es/\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/airlines",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"airlines"
					]
				}
			},
			"response": [
				{
					"name": "Add an airline",
					"originalRequest": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"Avianca\",\r\n    \"description\": \"Avianca es una empresa de transporte aereo depasajeros y carga ...\",\r\n    \"foundationDate\": \"1987-09-03\",\r\n    \"webPage\": \"https://www.avianca.com/co/es/\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/airlines",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"airlines"
							]
						}
					},
					"status": "Created",
					"code": 201,
					"_postman_previewlanguage": "json",
					"header": null,
					"cookie": [],
					"body": "{\r\n    \"name\": \"Avianca\",\r\n    \"description\": \"Avianca es una empresa de transporte aereo depasajeros y carga ...\",\r\n    \"foundationDate\": \"1987-09-03\",\r\n    \"webPage\": \"https://www.avianca.com/co/es/\",\r\n    \"id\": \"bd414a49-2083-4e4b-8fea-11198265771b\"\r\n}"
				}
			]
		},
		{
			"name": "Add an new airport",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var data = pm.response.json()\r",
							"pm.globals.set(\"airport_id_1\", data.id);\r",
							"\r",
							"pm.test(\"Status code is 201\", function () {\r",
							"    pm.response.to.have.status(201);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\": \"El Dorado\",\r\n    \"code\": \"BOG\",\r\n    \"country\": \"Colombia\",\r\n    \"city\": \"Bogota\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/airports",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"airports"
					]
				}
			},
			"response": [
				{
					"name": "Add an airport",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"El Dorado\",\r\n    \"code\": \"BOG\",\r\n    \"country\": \"Colombia\",\r\n    \"city\": \"Bogota\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/airports",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"airports"
							]
						}
					},
					"status": "Created",
					"code": 201,
					"_postman_previewlanguage": "json",
					"header": null,
					"cookie": [],
					"body": "{\n    \"name\": \"El Dorado\",\n    \"code\": \"BOG\",\n    \"country\": \"Colombia\",\n    \"city\": \"Bogota\",\n    \"id\": \"94096fef-cb17-4393-b947-48405c2bd47b\"\n}"
				}
			]
		},
		{
			"name": "Add an new airport",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var data = pm.response.json()\r",
							"pm.globals.set(\"airport_id_2\", data.id);\r",
							"\r",
							"pm.test(\"Status code is 201\", function () {\r",
							"    pm.response.to.have.status(201);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\": \"Ernesto Cortissoz\",\r\n    \"code\": \"BAQ\",\r\n    \"country\": \"Colombia\",\r\n    \"city\": \"Barranquilla\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/airports",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"airports"
					]
				}
			},
			"response": [
				{
					"name": "Add an airport",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"El Dorado\",\r\n    \"code\": \"BOG\",\r\n    \"country\": \"Colombia\",\r\n    \"city\": \"Bogota\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/airports",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"airports"
							]
						}
					},
					"status": "Created",
					"code": 201,
					"_postman_previewlanguage": "json",
					"header": null,
					"cookie": [],
					"body": "{\n    \"name\": \"El Dorado\",\n    \"code\": \"BOG\",\n    \"country\": \"Colombia\",\n    \"city\": \"Bogota\",\n    \"id\": \"94096fef-cb17-4393-b947-48405c2bd47b\"\n}"
				}
			]
		},
		{
			"name": "Add an airport to airline",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 201\", function () {\r",
							"   pm.response.to.have.status(201);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/airlines/{{airline_id_1}}/airports/{{airport_id_1}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"airlines",
						"{{airline_id_1}}",
						"airports",
						"{{airport_id_1}}"
					]
				}
			},
			"response": [
				{
					"name": "Add airport to airline",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/airlines/{{airline_id}}/airports/{{airport_id}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"airlines",
								"{{airline_id}}",
								"airports",
								"{{airport_id}}"
							]
						}
					},
					"status": "Created",
					"code": 201,
					"_postman_previewlanguage": "json",
					"header": null,
					"cookie": [],
					"body": "{\n    \"id\": \"9914a9ae-b29a-4567-abff-a58b75d95aea\",\n    \"name\": \"Avianca\",\n    \"description\": \"Avianca es una empresa de transporte aereo depasajeros y carga ...\",\n    \"foundationDate\": \"1987-09-03T05:00:00.000Z\",\n    \"webPage\": \"https://www.avianca.com/co/es/\",\n    \"airports\": [\n        {\n            \"id\": \"2e2484d2-ffd2-484f-bfd4-c1012a0dcf86\",\n            \"name\": \"El Dorado\",\n            \"code\": \"BOG\",\n            \"country\": \"Colombia\",\n            \"city\": \"Bogota\"\n        }\n    ]\n}"
				}
			]
		},
		{
			"name": "Add an invalid airport to valid airline",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 404\", function () {\r",
							"   pm.response.to.have.status(404);\r",
							"});\r",
							"\r",
							"pm.test(\"Get expected error message\", function () {\r",
							"   var data = pm.response.json();\r",
							"   pm.expect(data.message).to.eql(\"The airport with the given id was not found\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/airlines/{{airline_id}}/airports/00000000-0000-0000-0000-000000000000",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"airlines",
						"{{airline_id}}",
						"airports",
						"00000000-0000-0000-0000-000000000000"
					]
				}
			},
			"response": [
				{
					"name": "Add an invalid airport to valid airline",
					"originalRequest": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/airlines/{{airline_id}}/airports/00000000-0000-0000-0000-000000000000",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"airlines",
								"{{airline_id}}",
								"airports",
								"00000000-0000-0000-0000-000000000000"
							]
						}
					},
					"status": "Not Found",
					"code": 404,
					"_postman_previewlanguage": "json",
					"header": null,
					"cookie": [],
					"body": "{\n    \"statusCode\": 404,\n    \"message\": \"The airport with the given id was not found\"\n}"
				}
			]
		},
		{
			"name": "Get all airports by an airline",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test('Number of airlines > ' + 0, function () {\r",
							"   var data = pm.response.json()\r",
							"   pm.expect(data.length).to.greaterThan(0)\r",
							"});\r",
							"\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"   pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/airlines/{{airline_id_1}}/airports",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"airlines",
						"{{airline_id_1}}",
						"airports"
					]
				}
			},
			"response": [
				{
					"name": "Get all airports by an airline",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/airlines/{{airline_id}}/airports",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"airlines",
								"{{airline_id}}",
								"airports"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": null,
					"cookie": [],
					"body": "[\n    {\n        \"id\": \"2e2484d2-ffd2-484f-bfd4-c1012a0dcf86\",\n        \"name\": \"El Dorado\",\n        \"code\": \"BOG\",\n        \"country\": \"Colombia\",\n        \"city\": \"Bogota\"\n    },\n    {\n        \"id\": \"819c7b63-7020-4364-b8c3-1b6cefa7491c\",\n        \"name\": \"El Dorado\",\n        \"code\": \"BOG\",\n        \"country\": \"Colombia\",\n        \"city\": \"Bogota\"\n    }\n]"
				}
			]
		},
		{
			"name": "Get one airports by an airline",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"   pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/airlines/{{airline_id_1}}/airports/{{airport_id_1}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"airlines",
						"{{airline_id_1}}",
						"airports",
						"{{airport_id_1}}"
					]
				}
			},
			"response": [
				{
					"name": "Get one airports by an airline",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/airlines/{{airline_id}}/airports/{{airport_id}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"airlines",
								"{{airline_id}}",
								"airports",
								"{{airport_id}}"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": null,
					"cookie": [],
					"body": "{\n    \"id\": \"819c7b63-7020-4364-b8c3-1b6cefa7491c\",\n    \"name\": \"El Dorado\",\n    \"code\": \"BOG\",\n    \"country\": \"Colombia\",\n    \"city\": \"Bogota\"\n}"
				}
			]
		},
		{
			"name": "Get one airports that is not associated with an airline",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 412\", function () {\r",
							"   pm.response.to.have.status(412);\r",
							"});\r",
							"\r",
							"pm.test(\"Get expected error message\", function () {\r",
							"   var data = pm.response.json();\r",
							"   pm.expect(data.message).to.eql(\"The airport with the given id is not associated to the airline\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/airlines/{{airline_id_1}}/airports/{{airport_id_2}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"airlines",
						"{{airline_id_1}}",
						"airports",
						"{{airport_id_2}}"
					]
				}
			},
			"response": [
				{
					"name": "Get one airports that is not associated with an airline",
					"originalRequest": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/airlines/{{airline_id}}/airports/{{airport_id}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"airlines",
								"{{airline_id}}",
								"airports",
								"{{airport_id}}"
							]
						}
					},
					"status": "Precondition Failed",
					"code": 412,
					"_postman_previewlanguage": "json",
					"header": null,
					"cookie": [],
					"body": "{\n    \"statusCode\": 412,\n    \"message\": \"The airport with the given id is not associated to the airline\"\n}"
				}
			]
		},
		{
			"name": "Update airports associated with an airline",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 201\", function () {\r",
							"   pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "[\r\n    {\r\n        \"id\": \"{{airport_id_2}}\"\r\n    }\r\n]",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/airlines/{{airline_id_1}}/airports",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"airlines",
						"{{airline_id_1}}",
						"airports"
					]
				}
			},
			"response": [
				{
					"name": "Update airports associated with an airline",
					"originalRequest": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "[\r\n    {\r\n        \"id\": \"{{airport_id_2}}\"\r\n    }\r\n]",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/airlines/{{airline_id_1}}/airports",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"airlines",
								"{{airline_id_1}}",
								"airports"
							]
						}
					},
					"status": "OK",
					"code": 200,
					"_postman_previewlanguage": "json",
					"header": null,
					"cookie": [],
					"body": "{\n    \"id\": \"ddc3ac83-66ef-4ba8-9036-4ec0934f18a7\",\n    \"name\": \"Avianca\",\n    \"description\": \"Avianca es una empresa de transporte aereo depasajeros y carga ...\",\n    \"foundationDate\": \"1987-09-03T05:00:00.000Z\",\n    \"webPage\": \"https://www.avianca.com/co/es/\",\n    \"airports\": [\n        {\n            \"id\": \"6f69d459-9957-435a-95e9-1c10bef19b02\"\n        }\n    ]\n}"
				}
			]
		},
		{
			"name": "Update airports associated with an invalid airline",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 404\", function () {\r",
							"   pm.response.to.have.status(404);\r",
							"});\r",
							"\r",
							"pm.test(\"Get expected error message\", function () {\r",
							"   var data = pm.response.json();\r",
							"   pm.expect(data.message).to.eql(\"The airport with the given id was not found\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "[\r\n    {\r\n        \"id\": \"00000000-0000-0000-0000-000000000000\"\r\n    }\r\n]",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseUrl}}/airlines/{{airline_id_1}}/airports",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"airlines",
						"{{airline_id_1}}",
						"airports"
					]
				}
			},
			"response": [
				{
					"name": "Update airports associated with an invalid airline",
					"originalRequest": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "[\r\n    {\r\n        \"id\": \"00000000-0000-0000-0000-000000000000\"\r\n    }\r\n]",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/airlines/{{airline_id_1}}/airports",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"airlines",
								"{{airline_id_1}}",
								"airports"
							]
						}
					},
					"status": "Not Found",
					"code": 404,
					"_postman_previewlanguage": "json",
					"header": null,
					"cookie": [],
					"body": "{\n    \"statusCode\": 404,\n    \"message\": \"The airport with the given id was not found\"\n}"
				}
			]
		},
		{
			"name": "Delete airport associated with an airline",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 204\", function () {\r",
							"   pm.response.to.have.status(204);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/airlines/{{airline_id_1}}/airports/{{airport_id_2}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"airlines",
						"{{airline_id_1}}",
						"airports",
						"{{airport_id_2}}"
					]
				}
			},
			"response": [
				{
					"name": "Delete airport associated with an airline",
					"originalRequest": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/airlines/{{airline_id_1}}/airports/{{airport_id_2}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"airlines",
								"{{airline_id_1}}",
								"airports",
								"{{airport_id_2}}"
							]
						}
					},
					"status": "No Content",
					"code": 204,
					"_postman_previewlanguage": null,
					"header": null,
					"cookie": [],
					"body": null
				}
			]
		},
		{
			"name": "Delete airport that is not associated with an airline",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 412\", function () {\r",
							"   pm.response.to.have.status(412);\r",
							"});\r",
							"\r",
							"pm.test(\"Get expected error message\", function () {\r",
							"   var data = pm.response.json();\r",
							"   pm.expect(data.message).to.eql(\"The airport with the given id is not associated to the airline\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "{{baseUrl}}/airlines/{{airline_id_1}}/airports/{{airport_id_1}}",
					"host": [
						"{{baseUrl}}"
					],
					"path": [
						"airlines",
						"{{airline_id_1}}",
						"airports",
						"{{airport_id_1}}"
					]
				}
			},
			"response": [
				{
					"name": "Delete airport that is not associated with an airline",
					"originalRequest": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/airlines/{{airline_id_1}}/airports/{{airport_id_1}}",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"airlines",
								"{{airline_id_1}}",
								"airports",
								"{{airport_id_1}}"
							]
						}
					},
					"status": "Precondition Failed",
					"code": 412,
					"_postman_previewlanguage": "json",
					"header": null,
					"cookie": [],
					"body": "{\n    \"statusCode\": 412,\n    \"message\": \"The airport with the given id is not associated to the airline\"\n}"
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "baseUrl",
			"value": "http://localhost:3000/api/v1",
			"type": "string"
		}
	]
}